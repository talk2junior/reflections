What happens when you initialize a repository? Why do you need to do it?

	It said that it was initializing empty Git respository in whatever directory I was in at the time. You need to create a git repository in the directory in which you wish to add files from.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area allows you to gather your files before committing to repository. That way you can commit one package of file changes instead of multiple commits. This is more logical in the committing process.

How can you use the staging area to make sure you have one commit per logical
change?

	You keep the version you are working on in the staging area till after you have made the necessary changes. Changes must be specific and notated properly for future reference by either you or another programmer.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches keep your edits organized. Each logical change can be accessed with each branch, making it easier to debug. Context switching or when changes are public. Compartmentalize the workload.

How do the diagrams help you visualize the branch structure?

	Tremendously well. Seeing the layout in diagram form helps to understand the various commit points and where your edits branch to.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	You get one file that can be referenced via a git log timeline. It is a good way of communicating any and all edits to a file.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	Automatic merging can cause issues with the code where manually ensures you are more likely to correct the code before commiting.

